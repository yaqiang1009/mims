<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wnxy.hospital.mims.mapper.OpRegistryMapper" >
  <resultMap id="BaseResultMap" type="com.wnxy.hospital.mims.entity.OpRegistry" >
    <id column="rs_id" property="rsId" jdbcType="VARCHAR" />
    <result column="pt_id" property="ptId" jdbcType="VARCHAR" />
    <result column="dl_id" property="dlId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="regprice" property="regprice" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rs_id, pt_id, dl_id, state, date, regprice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wnxy.hospital.mims.entity.OpRegistryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from op_registry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from op_registry
    where rs_id = #{rsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from op_registry
    where rs_id = #{rsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wnxy.hospital.mims.entity.OpRegistryExample" >
    delete from op_registry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wnxy.hospital.mims.entity.OpRegistry" >
    insert into op_registry (rs_id, pt_id, dl_id, 
      state, date, regprice)
    values (#{rsId,jdbcType=VARCHAR}, #{ptId,jdbcType=VARCHAR}, #{dlId,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{regprice,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.wnxy.hospital.mims.entity.OpRegistry" >
    insert into op_registry
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rsId != null" >
        rs_id,
      </if>
      <if test="ptId != null" >
        pt_id,
      </if>
      <if test="dlId != null" >
        dl_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="regprice != null" >
        regprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rsId != null" >
        #{rsId,jdbcType=VARCHAR},
      </if>
      <if test="ptId != null" >
        #{ptId,jdbcType=VARCHAR},
      </if>
      <if test="dlId != null" >
        #{dlId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="regprice != null" >
        #{regprice,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wnxy.hospital.mims.entity.OpRegistryExample" resultType="java.lang.Integer" >
    select count(*) from op_registry
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update op_registry
    <set >
      <if test="record.rsId != null" >
        rs_id = #{record.rsId,jdbcType=VARCHAR},
      </if>
      <if test="record.ptId != null" >
        pt_id = #{record.ptId,jdbcType=VARCHAR},
      </if>
      <if test="record.dlId != null" >
        dl_id = #{record.dlId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.regprice != null" >
        regprice = #{record.regprice,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update op_registry
    set rs_id = #{record.rsId,jdbcType=VARCHAR},
      pt_id = #{record.ptId,jdbcType=VARCHAR},
      dl_id = #{record.dlId,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      regprice = #{record.regprice,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wnxy.hospital.mims.entity.OpRegistry" >
    update op_registry
    <set >
      <if test="ptId != null" >
        pt_id = #{ptId,jdbcType=VARCHAR},
      </if>
      <if test="dlId != null" >
        dl_id = #{dlId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="regprice != null" >
        regprice = #{regprice,jdbcType=REAL},
      </if>
    </set>
    where rs_id = #{rsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wnxy.hospital.mims.entity.OpRegistry" >
    update op_registry
    set pt_id = #{ptId,jdbcType=VARCHAR},
      dl_id = #{dlId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      regprice = #{regprice,jdbcType=REAL}
    where rs_id = #{rsId,jdbcType=VARCHAR}
  </update>
</mapper>